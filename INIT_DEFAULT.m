%% Online LFP & CSD analysis program
% ----------------------------------------------------------------
% Default values
%
% Benjamin Cohen-Lhyver (@Coll√®ge de France - UMR 7152) - February 2013

% ----------- %
% DO NOT EDIT %
% ----------- %
function INIT_DEFAULT
    clear global * ;
    set(0, 'Units', 'normalized') ;
    % --- Clear previous data
    data_to_remove = {'brain_path',...
                      'depth_max',...
                      'depth_path',...
                      'images',...
                      'infos_CP',...
                      'models',...
                      'neur_ext',...
                      'nb_zones',...
                      'olca_path',...
                      'parameters',
                      'QUIT',...
                      'set',...
                      'features',...
                      'depth_path',...
                      'stimuli_features',...
                      'subzone_struct',...
                      'sys',...
                      'zone_feat',...
                      'zone_struct',...
                      'zones'} ;

    data_base = fieldnames(getappdata(0))' ;
    for iData = data_base
        if any(strcmp(iData, 'zones'))
            zones = getappdata(0, 'zones') ;
            idx = 1 ;
            while isappdata(0, ['zone', char(idx)])
                rmappdata(0, ['zone', char(idx)]) ;
                idx = idx + 1 ;
            end
        end
        if any(strcmp(iData, data_to_remove))
            try
                rmappdata(0, char(iData)) ;
            catch exception
            end
        end
    end

    % --- Detect Olca folder
    p = path ;
    if ispc
        f = [0, find(p == ';')] ;
    elseif isunix
        f = [0, find(p == ':')] ;
    end
    for iPath = 1:length(f)-1
        olca_path = p(f(iPath)+1:f(iPath+1)) ;
        if strfind(lower(olca_path), 'olca;')
            setappdata(0, 'olca_path', olca_path(1:end-1)) ;
            break
        end
    end

    % --- Default format of Neuralynx files
    brain_path = fullfile(olca_path, 'images', 'green_mod.bmp') ;
    depth_path = fullfile(olca_path, 'images', 'depth.jpg') ;
   
    % --- Zones --- %
    zone = struct('name'       , [],...
                  'coordinates', [],...
                  'subzones'   , [],...
                  'handle'     , [],...
                  'output'     , [],...
                  'depths'     , [],...
                  'csd'        , [],...
                  'avrec'      , [],...
                  'mean_lfp'   , [],...
                  'spikes_all' , [],...
                  'csd_mean'   , [],...
                  'latencies'  , []) ;

    subzone = struct('depth'     , [],...
                     'parameters', [],...
                     'output'    , [],...
                     'latencies' , [],...
                     'lfp'       , [],...
                     'lfp_mean'  , [],...
                     'lfp_raw'   , [],...
                     'spikes_raw', [],...
                     'spikes_mean', [],...
                     'spikes_raster', [],...
                     'spikes_tuning', [],...
                     'spikes_spontaneous', []) ;
    
    subzone.parameters = struct('lp_lfp'     , [],...
                                'hp_lfp'     , [],...
                                'lp_sp'      , [],...
                                'hp_sp'      , [],...
                                'sp_thr'     , [],...
                                'bline'      , [],...
                                'lstim'      , [],...
                                'after'      , []) ;
    subzone.output = [] ;

    spec = struct('name'        , [],...
                  'coordinates' , [],...
                  'depths'      , [],...
                  'parameters'  , [],...
                  'stim'        , [],...
                  'coagulations', [],...
                  'folder'      , []) ;

    znames = genvarname(repmat({'zone'}, 1, 21)) ;
    znames(1) = [] ;
    setappdata(0, 'znames', znames) ;
    global NB_ZONES ;
    NB_ZONES = 0 ;

    % --- Store data
    setappdata(0, 'brain_path'    , brain_path) ;
    setappdata(0, 'depth_path'    , depth_path) ;
    %setappdata(0, 'parameters'    , parameters) ;
    setappdata(0, 'zone_struct'   , zone) ;
    setappdata(0, 'subzone_struct', subzone) ;
    setappdata(0, 'rotation'      , 0) ;
    setappdata(0, 'notes', struct('notes', '')) ;
    setappdata(0, 'spec_struct', spec) ;
end

% ----------- %
% DO NOT EDIT %
% ----------- %